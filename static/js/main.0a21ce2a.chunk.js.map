{"version":3,"sources":["Pages/CategoryPage/CategoryPageStyle.module.css","Components/Navigation/navigationStyle.module.css","Components/Title/titleStyle.module.css","App/appStyle.module.css","Pages/HomePage/homePageStyle.module.css","Components/Avatar/avatarStyle.module.css","Components/Card/cardStyle.module.css","Components/Pagination/paginationStyle.module.css","Components/List/listStyle.module.css","Pictures/big-placeholder.jpg","Components/Navigation/navigation.js","ServerApi/ServerApi.js","Context/context.js","Components/Title/title.js","Pages/HomePage/homePage.js","HOCS/withConsumerHOC.js","HOCS/withSetIntervalHOC.js","Components/Avatar/avatar.js","HOCS/withDataHOC.js","Components/Preloader/preloader.js","HOCS/withPreloaderHOC.js","Containers/Home/HomePageContainer/HomePageRandomCharAvatarContainer/HomePageRandomCharAvatarContainer.js","Containers/Home/HomePageContainer/HomePageRandomFilmAvatarContainer/HomePageRandomFilmAvatarContainer.js","Containers/Home/HomePageContainer/HomePageRandomPlanetAvatarContainer/HomePageRandomPlanetAvatarContainer.js","Containers/Home/HomePageContainer/HomePageContainer.js","Components/Card/card.js","Components/Pagination/pagination.js","Pages/CategoryPage/CategoryPage.js","Components/List/list.js","Containers/Films/FilmsPageContainer/FilmsPageContainer.js","Containers/Films/FilmCardContainer/FilmCardContainer.js","Containers/Characters/CharactersPageContainer/CharactersPageContainer.js","Containers/Characters/CharacterCardContainer/CharacterCardContainer.js","Containers/Planets/PlanetsPageContainer/PlanetsPageContainer.js","Containers/Planets/PlanetCardContainer/PlanetCardContainer.js","App/App.js","index.js"],"names":["module","exports","Navigation","className","style","wrapper","to","logo","nav","id","link","map","key","navItem","activeClassName","active","ServerApi","baseURL","imageBaseURL","getData","url","fetch","then","response","ok","json","catch","err","getCharactersList","pageNumber","getCharacter","characterId","getFilmsList","getFilm","filmId","getPlanetsList","getPlanet","planetId","getIdFromURL","match","getCharImage","getPlanetImage","getFilmImage","getFact","React","createContext","Provider","Consumer","memo","configuration","children","typeOfTitle","color","margin","props","factText","randomBannerWrapper","factWrapper","withConsumerHOC","Component","mapStateToProps","state","consumerProps","withSetIntervalHOC","intervalTime","this","intevalId","setInterval","getRandomFact","clearInterval","Avatar","isLoaded","onErrHandler","setState","prevProps","image","avatar","onError","src","alt","preloadPicture","PureComponent","withDataHOC","data","Preloader","withPreloaderHOC","providerValue","randomId","Math","ceil","random","homePage","cardBase","Pagination","onClickHandler","pageCount","paginationBtnsWrapper","paginationBtn","display","onClick","categoryTitle","isHover","changePageNumber","backdrop","onHover","descriptionWrapper","titleWrapper","cardslistWrapper","ListRow","label","Children","child","cloneElement","onMouseEnterHandler","onMouseLeaveHandler","count","results","filmsPageProps","card","title","onMouseLeave","onMouseEnter","filmsPage","nextOrPrev","console","log","field","charactersPageProps","listRowConfigsArray","name","charactersPage","planetsPage","factsData","facts","App","floor","length","text","isNeedToChangePage","getNextPageNumber","categoryPage","nextPage","randomFact","value","container","content","path","render","exact","params","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0a21ce2a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"CategoryPageStyle_wrapper__3vyRS\",\"cardslistWrapper\":\"CategoryPageStyle_cardslistWrapper__1x8Ai\",\"descriptionWrapper\":\"CategoryPageStyle_descriptionWrapper__3iLAd\",\"titleWrapper\":\"CategoryPageStyle_titleWrapper__1D0Vo\",\"paginationButtons\":\"CategoryPageStyle_paginationButtons__1av5H\",\"backdrop\":\"CategoryPageStyle_backdrop__USjdS\",\"onHover\":\"CategoryPageStyle_onHover__2QkoI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"navigationStyle_wrapper__1sV_5\",\"logo\":\"navigationStyle_logo__2uk5i\",\"nav\":\"navigationStyle_nav__2467X\",\"navItem\":\"navigationStyle_navItem__3g-00\",\"active\":\"navigationStyle_active__1feDA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"titleSmall\":\"titleStyle_titleSmall__ZB2QS\",\"titleMedium\":\"titleStyle_titleMedium__2yNlV\",\"titleBig\":\"titleStyle_titleBig__2gusI\",\"colorOrange\":\"titleStyle_colorOrange__3CD6c\",\"colorWhite\":\"titleStyle_colorWhite__e7FEs\",\"mb-small\":\"titleStyle_mb-small__1BypQ\",\"mb-medium\":\"titleStyle_mb-medium__-0H3c\",\"mb-big\":\"titleStyle_mb-big__3A2lb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"appStyle_container__2I560\",\"content\":\"appStyle_content__3Fblr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"randomBannerWrapper\":\"homePageStyle_randomBannerWrapper__NRvdi\",\"factWrapper\":\"homePageStyle_factWrapper__3AueV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"avatarStyle_avatar__B7mFx\",\"home\":\"avatarStyle_home__3MMz2\",\"characters\":\"avatarStyle_characters__T9rhl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardBase\":\"cardStyle_cardBase__1Q1qc\",\"filmsPage\":\"cardStyle_filmsPage__K7vVQ\",\"charactersPage\":\"cardStyle_charactersPage__4ggmT\",\"planetsPage\":\"cardStyle_planetsPage__3Z4u0\",\"characterCard\":\"cardStyle_characterCard__3bXDF\",\"planetCard\":\"cardStyle_planetCard__15qLr\",\"filmCard\":\"cardStyle_filmCard__1zjLz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginationBtnsWrapper\":\"paginationStyle_paginationBtnsWrapper__28UQq\",\"paginationBtn\":\"paginationStyle_paginationBtn__2KahI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filmsPage\":\"listStyle_filmsPage__30G9l\",\"colorOrange\":\"listStyle_colorOrange__37gsZ\",\"filmCard\":\"listStyle_filmCard__3KHDi\",\"characters\":\"listStyle_characters__1jFFF\",\"characterCard\":\"listStyle_characterCard__1EqVO\",\"planetCard\":\"listStyle_planetCard__3xhi2\",\"planetsPage\":\"listStyle_planetsPage__3J3BE\"};","module.exports = __webpack_public_path__ + \"static/media/big-placeholder.2c7d2081.jpg\";","import React from 'react';\r\nimport style from \"./navigationStyle.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navigation = () => {\r\n\r\n    const navigationArray = [\r\n        {id: \"Home\", link: \"/home\"},\r\n        {id: \"Films\", link: \"/films\"},\r\n        {id: \"Characters\", link: \"/characters\"},\r\n        {id: \"Planets\", link: \"/planets\"}]\r\n\r\n    return (\r\n        <nav className={style.wrapper}>\r\n            <NavLink to=\"/home\">\r\n                <div className={style.logo}/>\r\n            </NavLink>\r\n            <ul className={style.nav}>\r\n                {navigationArray.map(({id, link}) =>\r\n                    <li key={id} className={style.navItem}>\r\n                        <NavLink activeClassName={style.active} to={link}>{id}</NavLink>\r\n                    </li>\r\n                )}\r\n            </ul>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navigation;\r\n","class ServerApi {\r\n    baseURL = \"https://swapi.dev/api\"\r\n    imageBaseURL = \"https://starwars-visualguide.com/assets/img/\"\r\n\r\n    getData = (url) => {\r\n        return fetch(`${this.baseURL}${url}`)\r\n            .then((response) => {\r\n                // console.log()\r\n                if (!response.ok) return null\r\n                else return response.json()\r\n            })\r\n            .catch(err => {\r\n                if (err) return null\r\n            })\r\n    }\r\n\r\n    getCharactersList = (pageNumber) => {\r\n        return this.getData(`/people/?page=${pageNumber}`)\r\n    }\r\n\r\n    getCharacter = (characterId) => {\r\n        return this.getData(`/people/${characterId}/`)\r\n    }\r\n\r\n    getFilmsList = (pageNumber) => {\r\n        return this.getData(`/films/?page=${pageNumber}`)\r\n    }\r\n\r\n    getFilm = (filmId) => {\r\n        return this.getData(`/films/${filmId}/`)\r\n    }\r\n\r\n    getPlanetsList = (pageNumber) => {\r\n        return this.getData(`/planets/?page=${pageNumber}`)\r\n    }\r\n\r\n    getPlanet = (planetId) => {\r\n        return this.getData(`/planets/${planetId}/`)\r\n    }\r\n\r\n    getIdFromURL = (url) => {\r\n        // console.log(url)\r\n        const {0: id} = url.match(/\\d+/)\r\n        return id\r\n    }\r\n\r\n    getCharImage = (id) => {\r\n        return `${this.imageBaseURL}/characters/${id}.jpg`\r\n    }\r\n\r\n    getPlanetImage = (id) => {\r\n        return `${this.imageBaseURL}/planets/${id}.jpg`\r\n\r\n    }\r\n\r\n    getFilmImage = (id) => {\r\n        return `${this.imageBaseURL}/films/${id}.jpg`\r\n    }\r\n\r\n    getFact = () => {\r\n       return fetch(\"./facts.json\")\r\n    }\r\n\r\n}\r\nexport default ServerApi\r\n\r\n// fetch(`https://swapi.dev/api/people/?page=${this.props.pageNumber}`)\r\n//     .then(response => response.text())\r\n//     .then(data => this.setState({data : JSON.parse(data)}))\r\n//\r\n// fetch(`https://swapi.dev/api/people/${this.props.id}/`)\r\n//     .then(response => response.text())\r\n//     .then(response => {\r\n//         const data = JSON.parse(response)\r\n//         console.log(data)\r\n//         this.setState({data})\r\n//     })","import React from 'react';\r\n\r\nconst { Provider, Consumer } = React.createContext()\r\n\r\nexport {Provider, Consumer}","import React from 'react';\r\nimport style from \"./titleStyle.module.css\"\r\n\r\nconst Title = ({configuration, children}) => {\r\n    const {typeOfTitle, color, margin} = configuration\r\n\r\n    return (\r\n        <div className={`${style[typeOfTitle]} ${style[color]} ${style[margin]}`}>\r\n            <span>{children}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(Title);\r\n","import React from 'react';\r\nimport style from \"./homePageStyle.module.css\"\r\nimport Title from \"../../Components/Title/title\";\r\n\r\nconst HomePage = (props) => {\r\n    const { factText, children } = props;\r\n    return (\r\n        <div>\r\n            <Title configuration={{typeOfTitle: \"titleBig\", color: \"colorOrange\"}}>\r\n                Добро пожаловать на Star Wars Wiki!\r\n            </Title>\r\n            <p>\r\n                Энциклопедию о вселенной Star Wars,\r\n                в которой каждый может окунуться в\r\n                мир фактов о величайшей приключенческой\r\n                серии всех времен!\r\n            </p>\r\n            <div className={style.randomBannerWrapper}>\r\n                {children}\r\n            </div>\r\n            <Title configuration={{typeOfTitle : \"titleMedium\"}}>\r\n                Интересный факт\r\n            </Title>\r\n            <div className={style.factWrapper}>\r\n                <p>\r\n                    {factText}\r\n                </p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(HomePage);\r\n","import React from 'react';\r\nimport {Consumer} from \"../Context/context\";\r\n\r\nconst withConsumerHOC = (Component, mapStateToProps) => {\r\n\r\n    return (props) => {\r\n        return (\r\n            <Consumer>\r\n                {(state) => {\r\n                    const consumerProps = mapStateToProps(state)\r\n                    return <Component {...props} {...consumerProps} />\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default withConsumerHOC","import React from 'react';\r\n\r\nconst withSetIntervalHOC = (Component, intervalTime) => {\r\n\r\n    return class extends React.Component {\r\n        intevalId\r\n\r\n        componentDidMount() {\r\n            this.intevalId = setInterval(() => {\r\n                this.props.getRandomFact()\r\n            }, intervalTime)\r\n        }\r\n\r\n        componentWillUnmount() {\r\n            clearInterval(this.intevalId)\r\n        }\r\n\r\n        render() {\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n}\r\n\r\nexport default withSetIntervalHOC","import React from 'react';\r\nimport style from \"./avatarStyle.module.css\"\r\nimport preloadPicture from \"../../Pictures/big-placeholder.jpg\";\r\n\r\nclass Avatar extends React.PureComponent {\r\n\r\n    state = {\r\n        isLoaded: true\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        return prevProps.image !== this.props.image && this.setState({ isLoaded: true })\r\n    }\r\n\r\n    onErrHandler = () => {\r\n        this.setState({ isLoaded: false })\r\n    }\r\n\r\n    render() {\r\n        const {image, configuration: {className}} = this.props;\r\n        const {isLoaded} = this.state\r\n\r\n        return (\r\n            <div className={`${style[className]} ${style.avatar}` }>\r\n                {isLoaded ? <img onError={this.onErrHandler} src={image} alt=\"\"/> : <img src={preloadPicture} alt=\"\"/> }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Avatar;\r\n","import React from 'react';\r\n\r\nconst withDataHOC = (Component) => {\r\n\r\n    return class extends React.PureComponent {\r\n        state = {\r\n            data: null,\r\n        }\r\n\r\n        componentDidMount() {\r\n            this.props.getData()\r\n                .then((data) => {\r\n                    this.setState({data})\r\n                })\r\n                .catch(err => {\r\n                    this.setState({data: null})\r\n                });\r\n        }\r\n\r\n        componentDidUpdate(prevProps) {\r\n            if (prevProps.getData === this.props.getData) {\r\n                return false\r\n            }\r\n            this.props.getData()\r\n                .then((data) => {\r\n                    this.setState({data})\r\n                })\r\n                .catch(err => {\r\n                    this.setState({data: null})\r\n                });\r\n        }\r\n\r\n        render() {\r\n            return <Component {...this.props} data={this.state.data}/>\r\n        }\r\n    }\r\n}\r\n\r\nexport default withDataHOC","import React from 'react';\r\nimport \"./preloaderStyle.css\"\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div className=\"loadingio-spinner-wedges-wwi5kqnm92m\">\r\n            <div className=\"ldio-lqwdn8dmw5\">\r\n                <div>\r\n                    <div>\r\n                        <div></div>\r\n                    </div>\r\n                    <div>\r\n                        <div></div>\r\n                    </div>\r\n                    <div>\r\n                        <div></div>\r\n                    </div>\r\n                    <div>\r\n                        <div></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader;\r\n","import React from 'react';\r\nimport Preloader from \"../Components/Preloader/preloader\";\r\n\r\nconst withPreloaderHOC = (Component) => {\r\n\r\n    return (props) => {\r\n\r\n        const { data } = props\r\n        return !data ? <Preloader/> : <Component {...props} />\r\n    }\r\n}\r\n\r\nexport default withPreloaderHOC","import React from 'react';\r\n\r\nimport withConsumerHOC from \"../../../../HOCS/withConsumerHOC\";\r\n\r\nimport Avatar from \"../../../../Components/Avatar/avatar\";\r\nimport withDataHOC from \"../../../../HOCS/withDataHOC\";\r\nimport withPreloaderHOC from \"../../../../HOCS/withPreloaderHOC\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst HomePageRandomCharAvatarContainer = ({ getCharImage, getIdFromURL, data : {url} }) => {\r\n    const id = getIdFromURL(url)\r\n    return (\r\n        <NavLink to={`/characters/${id}`} ><Avatar configuration={{className: \"home\"}} image={getCharImage(id)}/></NavLink>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (providerValue) => {\r\n    const {ServerApi} = providerValue\r\n    const randomId = Math.ceil(Math.random() * 81)\r\n    return {\r\n        getData : () => ServerApi.getCharacter(randomId),\r\n        getCharImage : ServerApi.getCharImage,\r\n        getIdFromURL : ServerApi.getIdFromURL\r\n    }\r\n}\r\n\r\nexport default withConsumerHOC(withDataHOC(withPreloaderHOC(HomePageRandomCharAvatarContainer)), mapStateToProps)","import React from 'react';\r\nimport withConsumerHOC from \"../../../../HOCS/withConsumerHOC\";\r\nimport Avatar from \"../../../../Components/Avatar/avatar\";\r\nimport withDataHOC from \"../../../../HOCS/withDataHOC\";\r\nimport withPreloaderHOC from \"../../../../HOCS/withPreloaderHOC\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst HomePageRandomFilmAvatarContainer = ({getFilmImage, getIdFromURL, data : {url} }) => {\r\n    const id = getIdFromURL(url)\r\n    return (\r\n        <NavLink to={`/films/${id}`} ><Avatar configuration={{className: \"home\"}} image={getFilmImage(id)}/></NavLink>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (providerValue) => {\r\n    const {ServerApi} = providerValue\r\n    const randomId = Math.ceil(Math.random() * 6)\r\n    return {\r\n        getData : () => ServerApi.getFilm(randomId),\r\n        getFilmImage : ServerApi.getFilmImage,\r\n        getIdFromURL : ServerApi.getIdFromURL\r\n    }\r\n}\r\n\r\nexport default withConsumerHOC(withDataHOC(withPreloaderHOC(HomePageRandomFilmAvatarContainer)), mapStateToProps)","import React from 'react';\r\nimport withConsumerHOC from \"../../../../HOCS/withConsumerHOC\";\r\nimport Avatar from \"../../../../Components/Avatar/avatar\";\r\nimport withDataHOC from \"../../../../HOCS/withDataHOC\";\r\nimport withPreloaderHOC from \"../../../../HOCS/withPreloaderHOC\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst HomePageRandomPlanetAvatarContainer = ({getPlanetImage, getIdFromURL, data: {url} }) => {\r\n    const id = getIdFromURL(url)\r\n    return (\r\n        <NavLink to={`/planets/${id}`} ><Avatar configuration={{className: \"home\"}} image={getPlanetImage(id)}/></NavLink>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (providerValue) => {\r\n    const {ServerApi} = providerValue\r\n    const randomId = Math.ceil(Math.random() * 19)\r\n    return {\r\n        getData : () => ServerApi.getCharacter(randomId),\r\n        getPlanetImage : ServerApi.getPlanetImage,\r\n        getIdFromURL : ServerApi.getIdFromURL\r\n    }\r\n}\r\n\r\nexport default withConsumerHOC(withDataHOC(withPreloaderHOC(HomePageRandomPlanetAvatarContainer)), mapStateToProps)","import React from 'react';\r\nimport HomePage from \"../../../Pages/HomePage/homePage\";\r\nimport withConsumerHOC from \"../../../HOCS/withConsumerHOC\";\r\nimport withSetIntervalHOC from \"../../../HOCS/withSetIntervalHOC\";\r\nimport HomePageRandomCharAvatarContainer from \"./HomePageRandomCharAvatarContainer/HomePageRandomCharAvatarContainer\";\r\nimport HomePageRandomFilmAvatarContainer from \"./HomePageRandomFilmAvatarContainer/HomePageRandomFilmAvatarContainer\";\r\nimport HomePageRandomPlanetAvatarContainer from \"./HomePageRandomPlanetAvatarContainer/HomePageRandomPlanetAvatarContainer\";\r\n\r\nconst HomePageContainer = (props) => {\r\n\r\n    return (\r\n        <HomePage {...props} >\r\n            <HomePageRandomCharAvatarContainer/>\r\n            <HomePageRandomFilmAvatarContainer/>\r\n            <HomePageRandomPlanetAvatarContainer/>\r\n        </HomePage>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (providerValue) => {\r\n    const {state, getRandomFact } = providerValue\r\n\r\n    return {\r\n        factText : state.homePage.factText,\r\n        getRandomFact : getRandomFact,\r\n    }\r\n}\r\n\r\nexport default withConsumerHOC(withSetIntervalHOC(HomePageContainer, 15000), mapStateToProps)","import React from 'react';\r\nimport style from \"./cardStyle.module.css\"\r\n\r\nconst Card = (props) => {\r\n\r\n    const { configuration: {className}, children } = props\r\n\r\n\r\n    return (\r\n        <div className={style[className] + \" \" + style.cardBase}>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(Card);\r\n","import React from 'react';\r\nimport style from \"./paginationStyle.module.css\"\r\n\r\n\r\nconst Pagination = ({onClickHandler, pageNumber, pageCount}) => {\r\n\r\n    const {paginationBtnsWrapper, paginationBtn} = style\r\n\r\n    return (\r\n            <div>\r\n                <span>{`cтр. ${pageNumber} из ${pageCount}`}</span>\r\n                <div style={{display : pageCount <=1 && \"none\" }} className={paginationBtnsWrapper}>\r\n                    {pageNumber === 1 ? null : <div className={paginationBtn} onClick={() => onClickHandler(\"prev\", pageCount, pageNumber)}>prev</div>}\r\n                    {pageNumber === pageCount ? null : <div className={paginationBtn} onClick={() => onClickHandler(\"next\", pageCount, pageNumber)}>next</div>}\r\n                </div>\r\n            </div>\r\n    );\r\n}\r\n\r\nexport default Pagination;\r\n","import React from 'react';\r\nimport style from \"./CategoryPageStyle.module.css\"\r\nimport Pagination from \"../../Components/Pagination/pagination\";\r\nimport Title from \"../../Components/Title/title\";\r\n\r\n\r\nconst CategoryPage = (props) => {\r\n\r\n    const {\r\n        children,\r\n        categoryTitle,\r\n        pageNumber,\r\n        pageCount,\r\n        isHover,\r\n        changePageNumber} = props\r\n\r\n    return (\r\n        <div className={style.wrapper}>\r\n            <div className={`${style.backdrop} ${isHover && style.onHover}`}/>\r\n            <div className={style.descriptionWrapper}>\r\n                <div className={style.titleWrapper}>\r\n                    <Title configuration={{typeOfTitle : \"titleBig\"}}>{categoryTitle}</Title>\r\n                </div>\r\n                <Pagination pageCount={pageCount} pageNumber={pageNumber} onClickHandler={changePageNumber} />\r\n            </div>\r\n            <div className={style.cardslistWrapper}>\r\n                {children}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default React.memo(CategoryPage)\r\n","import React from 'react';\r\nimport style from \"./listStyle.module.css\"\r\n\r\nconst ListRow = React.memo( props => {\r\n\r\n    const {\r\n        configuration: {color, label},\r\n        children} = props\r\n    return (\r\n        <li>\r\n            {label && <span>{label} : </span>}\r\n            <span className={style[color]}>{children}</span>\r\n        </li>\r\n    )\r\n})\r\n\r\nexport {ListRow}\r\n\r\n\r\nconst List = (props) => {\r\n\r\n    const { configuration : { className }, children} = props\r\n\r\n    return (\r\n        <ul className={style[className]}>\r\n            { React.Children.map( children, child => React.cloneElement(child) ) }\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default React.memo(List);\r\n","import React from 'react';\r\n\r\nimport withConsumerHOC from \"../../../HOCS/withConsumerHOC\";\r\n\r\nimport Card from \"../../../Components/Card/card\";\r\n\r\n\r\nimport Avatar from \"../../../Components/Avatar/avatar\";\r\nimport withDataHOC from \"../../../HOCS/withDataHOC\";\r\n\r\nimport CategoryPage from \"../../../Pages/CategoryPage/CategoryPage\";\r\n\r\nimport withPreloaderHOC from \"../../../HOCS/withPreloaderHOC\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nimport List, {ListRow} from \"../../../Components/List/list\";\r\n\r\nclass FilmsPageContainer extends React.Component {\r\n\r\n    state = {\r\n        isHover : false\r\n    }\r\n\r\n    onMouseEnterHandler = () => {\r\n        this.setState({isHover: true})\r\n    }\r\n\r\n    onMouseLeaveHandler = () => {\r\n        this.setState({isHover: false})\r\n    }\r\n\r\n    render() {\r\n        const {pageNumber, data: {count, results}, changePageNumber, getIdFromURL, getFilmImage} = this.props\r\n        const pageCount = Math.ceil(count / 10)\r\n        const filmsPageProps = {\r\n            pageNumber,\r\n            pageCount,\r\n            categoryTitle: \"Фильмы\",\r\n            results,\r\n            changePageNumber\r\n        }\r\n\r\n        return (\r\n            <CategoryPage isHover={this.state.isHover} {...filmsPageProps}>\r\n                {results.map( (card) =>\r\n                    <NavLink key={card.title} onMouseLeave={this.onMouseLeaveHandler} onMouseEnter={this.onMouseEnterHandler} to={`/films/${getIdFromURL(card.url)}`}>\r\n                        <Card configuration={{className: \"filmsPage\"}}>\r\n                            <List configuration={{className: \"filmsPage\"}}>\r\n                                <Avatar configuration={{className : null}} image={getFilmImage(getIdFromURL(card.url))}/>\r\n                                <ListRow configuration={{color: \"colorOrange\"}}>\r\n                                    {card.title}\r\n                                </ListRow>\r\n                            </List>\r\n                        </Card>\r\n                    </NavLink>\r\n                )}\r\n            </CategoryPage>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (providerValue) => {\r\n    const {\r\n        state : {\r\n            filmsPage : { pageNumber }\r\n            },\r\n        ServerApi,\r\n        changePageNumber,\r\n    } = providerValue\r\n\r\n    return {\r\n        pageNumber: pageNumber,\r\n        getData : () => ServerApi.getFilmsList(pageNumber),\r\n        getFilmImage : ServerApi.getFilmImage,\r\n        getIdFromURL : ServerApi.getIdFromURL,\r\n        changePageNumber: (nextOrPrev, pageCount, pageNumber) => changePageNumber(nextOrPrev, pageCount, pageNumber, \"filmsPage\"),\r\n    }\r\n}\r\n\r\nexport default withConsumerHOC(withDataHOC(withPreloaderHOC(FilmsPageContainer)), mapStateToProps)","import React from 'react';\r\n\r\nimport withConsumerHOC from \"../../../HOCS/withConsumerHOC\";\r\n\r\nimport Card from \"../../../Components/Card/card\";\r\nimport withDataHOC from \"../../../HOCS/withDataHOC\";\r\nimport withPreloaderHOC from \"../../../HOCS/withPreloaderHOC\";\r\nimport Avatar from \"../../../Components/Avatar/avatar\";\r\nimport List, {ListRow} from \"../../../Components/List/list\";\r\nimport Title from \"../../../Components/Title/title\";\r\n\r\nconst FilmCardContainer = (props) => {\r\n\r\n    console.log(props, \"FilmCardContainer\")\r\n\r\n    const {getFilmImage, id, data} = props\r\n\r\n    const fieldsArray = [\r\n        {field : \"director\", label: \"Режисёр\"},\r\n        {field : \"producer\", label: \"Продюсеры\"},\r\n        {field : \"release_date\", label: \"Дата начала проката\"},\r\n        {field : \"opening_crawl\", label: \"Сюжет\"}]\r\n\r\n    return (\r\n        <Card configuration={{className: \"filmCard\"}}>\r\n            <Avatar configuration={{className: \"films\"}} image={getFilmImage(id)}/>\r\n            <List configuration={{className: \"filmCard\"}}>\r\n                <ListRow configuration={{color: \"colorOrange\"}}>\r\n                    <Title configuration={ {typeOfTitle: \"titleBig\", margin: \"marginBottom1\"} }>{data.title}</Title>\r\n                </ListRow>\r\n                {fieldsArray.map( ( {field, label} ) =>\r\n                    <ListRow configuration={{color: \"colorOrange\", label}}>\r\n                        {data[field]}\r\n                    </ListRow>)\r\n                }\r\n            </List>\r\n        </Card>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (providerValue) => {\r\n    const {ServerApi} = providerValue\r\n\r\n    return {\r\n        getFilmImage: ServerApi.getFilmImage\r\n    }\r\n}\r\n\r\nexport default withConsumerHOC(withDataHOC(withPreloaderHOC(FilmCardContainer)), mapStateToProps)","import React from 'react';\r\n\r\nimport withConsumerHOC from \"../../../HOCS/withConsumerHOC\";\r\n\r\nimport Card from \"../../../Components/Card/card\";\r\n\r\n\r\nimport Avatar from \"../../../Components/Avatar/avatar\";\r\nimport withDataHOC from \"../../../HOCS/withDataHOC\";\r\n\r\nimport CategoryPage from \"../../../Pages/CategoryPage/CategoryPage\";\r\n\r\nimport withPreloaderHOC from \"../../../HOCS/withPreloaderHOC\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nimport List, {ListRow} from \"../../../Components/List/list\";\r\nimport Title from \"../../../Components/Title/title\";\r\n\r\nclass CharactersPageContainer extends React.Component {\r\n\r\n    render() {\r\n\r\n        const {pageNumber, data: {count, results}, changePageNumber, getIdFromURL, getCharImage} = this.props\r\n        const pageCount = Math.ceil(count / 10)\r\n        const charactersPageProps = {\r\n            pageNumber,\r\n            pageCount,\r\n            categoryTitle: \"Персонажи\",\r\n            results,\r\n            changePageNumber\r\n        }\r\n\r\n        const listRowConfigsArray = [\r\n            {field : \"gender\", label: \"Пол\"},\r\n            {field : \"height\", label: \"Рост\"},\r\n            {field : \"mass\", label: \"Вес\"},]\r\n\r\n\r\n        return (\r\n            <CategoryPage {...charactersPageProps}>\r\n                {results.map( (card) =>\r\n                    <NavLink to={`/characters/${getIdFromURL(card.url)}`}>\r\n                        <Card configuration={{className: \"charactersPage\"}}>\r\n                            <Avatar configuration={{className : \"characters\"}} image={getCharImage(getIdFromURL(card.url))}/>\r\n                            <List configuration={{className: \"characters\"}}>\r\n                                <ListRow configuration={{color: \"colorOrange\"}}>\r\n                                    <Title configuration={ {typeOfTitle: \"titleMedium\", margin: \"mb-small\"} }>{card.name}</Title>\r\n                                </ListRow>\r\n                                {listRowConfigsArray.map( ( {field, label} ) =>\r\n                                    <ListRow configuration={{color: \"colorOrange\", label}}>\r\n                                        {card[field]}\r\n                                    </ListRow>)\r\n                                }\r\n                            </List>\r\n                        </Card>\r\n                    </NavLink>\r\n                )}\r\n            </CategoryPage>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (providerValue) => {\r\n    const {\r\n        state : {\r\n            charactersPage : { pageNumber }\r\n            },\r\n        ServerApi,\r\n        changePageNumber,\r\n    } = providerValue\r\n\r\n    return {\r\n        pageNumber: pageNumber,\r\n        getData : () => ServerApi.getCharactersList(pageNumber),\r\n        getCharImage : ServerApi.getCharImage,\r\n        getIdFromURL : ServerApi.getIdFromURL,\r\n        changePageNumber: (nextOrPrev, pageCount, pageNumber) => changePageNumber(nextOrPrev, pageCount, pageNumber, \"charactersPage\"),\r\n    }\r\n}\r\n\r\nexport default withConsumerHOC(withDataHOC(withPreloaderHOC(CharactersPageContainer)), mapStateToProps)","import React from 'react';\r\n\r\nimport withConsumerHOC from \"../../../HOCS/withConsumerHOC\";\r\n\r\nimport Card from \"../../../Components/Card/card\";\r\nimport withDataHOC from \"../../../HOCS/withDataHOC\";\r\nimport withPreloaderHOC from \"../../../HOCS/withPreloaderHOC\";\r\nimport Avatar from \"../../../Components/Avatar/avatar\";\r\nimport List, {ListRow} from \"../../../Components/List/list\";\r\nimport Title from \"../../../Components/Title/title\";\r\n\r\nconst CharacterCardContainer = (props) => {\r\n\r\n    console.log(props, \"CharacterCardContainer\")\r\n\r\n    const {getCharImage, id, data} = props\r\n\r\n    const listRowConfigsArray = [\r\n        {field : \"gender\", label: \"Пол\"},\r\n        {field : \"height\", label: \"Рост\"},\r\n        {field : \"mass\", label: \"Вес\"},\r\n        {field : \"skin_color\", label: \"Цвет кожи\"},\r\n        {field : \"eye_color\", label: \"Цвет глаз\"},\r\n        {field : \"hair_color\", label: \"Цвет волос\"}]\r\n\r\n    return (\r\n        <Card configuration={{className: \"characterCard\"}}>\r\n            <Avatar configuration={{className: null}} image={getCharImage(id)}/>\r\n            <List configuration={{className: \"characterCard\"}}>\r\n                <ListRow configuration={{color: \"colorOrange\"}}>\r\n                    <Title configuration={ {typeOfTitle: \"titleBig\", margin: \"mb-small\"} }>{data.name}</Title>\r\n                </ListRow>\r\n                {listRowConfigsArray.map( ( {field, label} ) =>\r\n                    <ListRow configuration={{color: \"colorOrange\", label}}>\r\n                        {data[field]}\r\n                    </ListRow>)\r\n                }\r\n            </List>\r\n        </Card>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (providerValue) => {\r\n    const {ServerApi} = providerValue\r\n\r\n    return {\r\n        getCharImage: ServerApi.getCharImage,\r\n    }\r\n}\r\n\r\nexport default withConsumerHOC(withDataHOC(withPreloaderHOC(CharacterCardContainer)), mapStateToProps)","import React from 'react';\r\n\r\nimport withConsumerHOC from \"../../../HOCS/withConsumerHOC\";\r\n\r\nimport Card from \"../../../Components/Card/card\";\r\n\r\n\r\nimport Avatar from \"../../../Components/Avatar/avatar\";\r\nimport withDataHOC from \"../../../HOCS/withDataHOC\";\r\n\r\nimport CategoryPage from \"../../../Pages/CategoryPage/CategoryPage\";\r\n\r\nimport withPreloaderHOC from \"../../../HOCS/withPreloaderHOC\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nimport List, {ListRow} from \"../../../Components/List/list\";\r\nimport Title from \"../../../Components/Title/title\";\r\n\r\nclass PlanetsPageContainer extends React.Component {\r\n\r\n    render() {\r\n\r\n        const {pageNumber, data: {count, results}, changePageNumber, getIdFromURL, getPlanetImage} = this.props\r\n        const pageCount = Math.ceil(count / 10)\r\n        const charactersPageProps = {\r\n            pageNumber,\r\n            pageCount,\r\n            categoryTitle: \"Планеты\",\r\n            results,\r\n            changePageNumber\r\n        }\r\n\r\n        const listRowConfigsArray = [\r\n            {field : \"diameter\", label: \"Диаметр\"},\r\n            {field : \"population\", label: \"Популяция\"},\r\n            {field : \"rotation_period\", label: \"Период вращения\"},]\r\n\r\n\r\n        return (\r\n            <CategoryPage {...charactersPageProps}>\r\n                {results.map( (card) =>\r\n                    <NavLink to={`/planets/${getIdFromURL(card.url)}`}>\r\n                        <Card configuration={{className: \"planetsPage\"}}>\r\n                            <Avatar configuration={{className : \"planetsPage\"}} image={getPlanetImage(getIdFromURL(card.url))}/>\r\n                            <List configuration={{className: null}}>\r\n                                <ListRow configuration={{color: \"colorOrange\"}}>\r\n                                    <Title configuration={ {typeOfTitle: \"titleMedium\", margin: \"mb-small\"} }>{card.name}</Title>\r\n                                </ListRow>\r\n                                {listRowConfigsArray.map( ( {field, label} ) =>\r\n                                    <ListRow configuration={{color: \"colorOrange\", label}}>\r\n                                        {card[field]}\r\n                                    </ListRow>)\r\n                                }\r\n                            </List>\r\n                        </Card>\r\n                    </NavLink>\r\n                )}\r\n            </CategoryPage>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (providerValue) => {\r\n    const {\r\n        state : {\r\n            planetsPage : { pageNumber }\r\n            },\r\n        ServerApi,\r\n        changePageNumber,\r\n    } = providerValue\r\n\r\n    return {\r\n        pageNumber: pageNumber,\r\n        getData : () => ServerApi.getPlanetsList(pageNumber),\r\n        getPlanetImage : ServerApi.getPlanetImage,\r\n        getIdFromURL : ServerApi.getIdFromURL,\r\n        changePageNumber: (nextOrPrev, pageCount, pageNumber) => changePageNumber(nextOrPrev, pageCount, pageNumber, \"planetsPage\"),\r\n    }\r\n}\r\n\r\nexport default withConsumerHOC(withDataHOC(withPreloaderHOC(PlanetsPageContainer)), mapStateToProps)","import React from 'react';\r\n\r\nimport withConsumerHOC from \"../../../HOCS/withConsumerHOC\";\r\n\r\nimport Card from \"../../../Components/Card/card\";\r\nimport withDataHOC from \"../../../HOCS/withDataHOC\";\r\nimport withPreloaderHOC from \"../../../HOCS/withPreloaderHOC\";\r\nimport Avatar from \"../../../Components/Avatar/avatar\";\r\nimport List, {ListRow} from \"../../../Components/List/list\";\r\nimport Title from \"../../../Components/Title/title\";\r\n\r\nconst PlanetCardContainer = (props) => {\r\n\r\n    const {getPlanetImage, id, data} = props\r\n\r\n    const listRowConfigsArray = [\r\n        {field : \"climate\", label: \"Климат\"},\r\n        {field : \"diameter\", label: \"Диаметр\"},\r\n        {field : \"gravity\", label: \"Грвитация\"},\r\n        {field : \"rotation_period\", label: \"Период вращения\"},\r\n        {field : \"population\", label: \"Популяция\"},\r\n        {field : \"surface_water\", label: \"Поверхностные водоёмы\"},\r\n        {field : \"terrain\", label: \"Местность\"},\r\n    ]\r\n\r\n    return (\r\n        <Card configuration={{className: \"planetCard\"}}>\r\n            <Avatar configuration={{className: \"filmCard\"}} image={getPlanetImage(id)}/>\r\n            <List configuration={{className: \"filmCard\"}}>\r\n                <ListRow configuration={{color: \"colorOrange\"}}>\r\n                    <Title configuration={ {typeOfTitle: \"titleBig\", margin: \"marginBottom1\"} }>{data.name}</Title>\r\n                </ListRow>\r\n                {listRowConfigsArray.map( ( {field, label} ) =>\r\n                    <ListRow configuration={{color: \"colorOrange\", label}}>\r\n                        {data[field]}\r\n                    </ListRow>)\r\n                }\r\n            </List>\r\n        </Card>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (providerValue) => {\r\n    const {ServerApi} = providerValue\r\n\r\n    return {\r\n        getPlanetImage: ServerApi.getPlanetImage,\r\n    }\r\n}\r\n\r\nexport default withConsumerHOC(withDataHOC(withPreloaderHOC(PlanetCardContainer)), mapStateToProps)","import React from 'react';\nimport style from \"./appStyle.module.css\"\nimport Navigation from \"../Components/Navigation/navigation\";\nimport {Redirect, Route, Switch} from \"react-router-dom\";\nimport facts from \"../ServerApi/facts.json\";\nimport ServerApi from \"../ServerApi/ServerApi\";\nimport {Provider} from \"../Context/context\";\nimport HomePageContainer from \"../Containers/Home/HomePageContainer/HomePageContainer\";\nimport FilmsPageContainer from \"../Containers/Films/FilmsPageContainer/FilmsPageContainer\";\nimport FilmCardContainer from \"../Containers/Films/FilmCardContainer/FilmCardContainer\";\nimport CharactersPageContainer from \"../Containers/Characters/CharactersPageContainer/CharactersPageContainer\";\nimport CharacterCardContainer from \"../Containers/Characters/CharacterCardContainer/CharacterCardContainer\";\nimport PlanetsPageContainer from \"../Containers/Planets/PlanetsPageContainer/PlanetsPageContainer\";\nimport PlanetCardContainer from \"../Containers/Planets/PlanetCardContainer/PlanetCardContainer\";\n\nconst {data: factsData} = facts\n\nclass App extends React.Component {\n\n    state = {\n        homePage: {\n            factText: factsData[Math.floor(Math.random() * factsData.length)].text\n        },\n        filmsPage: {\n            pageNumber: 1,\n        },\n        charactersPage: {\n            pageNumber: 1,\n        },\n        planetsPage: {\n            pageNumber: 1,\n        },\n    }\n\n    isNeedToChangePage = (id, pageCount, pageNumber) => {\n\n        if (id === \"next\" && pageNumber === pageCount) {\n            return false\n        }\n        if (id === \"prev\" && pageNumber === 1) {\n            return false\n        }\n        return true\n    }\n\n    getNextPageNumber = (nextOrPrev, pageNumber) => {\n\n        switch (nextOrPrev) {\n            case \"prev\":\n                return pageNumber - 1\n            case \"next\":\n                return pageNumber + 1\n            default :\n                return nextOrPrev\n        }\n    }\n\n    changePageNumber = (nextOrPrev, pageCount, pageNumber, categoryPage) => {\n        const nextPage = this.getNextPageNumber(nextOrPrev, pageNumber)\n\n        if (this.isNeedToChangePage(nextOrPrev, pageCount, pageNumber)) {\n            this.setState((state) => {\n                return {...state, [categoryPage] : {pageNumber : nextPage}, }\n            })\n        }\n    }\n\n    getRandomFact = () => {\n        const randomFact = factsData[Math.floor(Math.random() * factsData.length)].text\n        this.setState({homePage : {factText : randomFact}})\n    }\n\n    ServerApi = new ServerApi()\n\n    render() {\n        const providerValue = {\n            state : this.state,\n            ServerApi : this.ServerApi,\n            getRandomFact : this.getRandomFact,\n            changePageNumber: this.changePageNumber,\n        }\n        const {getCharacter, getFilm, getPlanet} = this.ServerApi\n\n        return (\n            <Provider value={providerValue}>\n                <div className={style.container}>\n                    <Navigation/>\n                    <div className={style.content}>\n                        <Switch>\n                            <Route path=\"/home\" render={() => <HomePageContainer/>}/>\n                            <Route path=\"/characters\" exact render={() => <CharactersPageContainer /> }/>\n                            <Route path=\"/characters/:id\" exact render={ ( {match : {params : {id}}} ) => <CharacterCardContainer getData={() => getCharacter(id)} id={id}/> }/>\n                            <Route path=\"/films\" exact render={() => <FilmsPageContainer /> }/>\n                            <Route path=\"/films/:id\" exact render={ ( {match : {params : {id}}} ) => <FilmCardContainer getData={() => getFilm(id)} id={id}/> }/>\n                            <Route path=\"/planets\" exact render={() => <PlanetsPageContainer /> }/>\n                            <Route path=\"/planets/:id\" exact render={ ( {match : {params : {id}}} ) => <PlanetCardContainer getData={() => getPlanet(id)} id={id}/> }/>\n                            <Redirect to=\"/home\"/>\n                        </Switch>\n                    </div>\n                </div>\n            </Provider>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App/App';\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n    <BrowserRouter>\n        <React.StrictMode>\n            <App/>\n        </React.StrictMode>\n    </BrowserRouter>,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}